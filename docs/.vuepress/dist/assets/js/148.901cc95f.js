(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{358:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"使用python控制led灯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用python控制led灯"}},[t._v("#")]),t._v(" 使用Python控制LED灯")]),t._v(" "),a("p",[t._v("很多时候，我们认为计算机像是台式机或者笔记本电脑，但树莓派向我们展示了计算机的另外一种形式。对我而言，树莓派最吸引我的地方并不是它有多小，而是树莓派有40个外接的引脚，通过外接的引脚我们可以和物理世界交互，从而完成各种有趣的应用。我们来看看树莓派的"),a("a",{attrs:{href:"https://pinout.xyz/",target:"_blank",rel:"noopener noreferrer"}},[t._v("引脚图"),a("OutboundLink")],1),t._v("吧:\n")]),a("p",{attrs:{align:"center"}},[a("img",{attrs:{src:"/images/python/use_pi_to_learn_python/pi_pinout.png",width:"500"}})]),t._v("\n图中展示了两种引脚编号的方式，其中一种是物理引脚编号，也就是从1到40；另一种叫做Broadcom编号模式，也就是我们接下来要使用的模式。接下来我们将要使用Python来控制一个LED灯。"),a("p"),t._v(" "),a("p",[t._v("首先，来看一个简单的电路图:\n")]),a("p",{attrs:{align:"center"}},[a("img",{attrs:{src:"/images/python/use_pi_to_learn_python/led_on_schematic.png",width:"500"}})]),t._v("\n从这个电路中可以看到，若"),a("code",[t._v("GPIO17")]),t._v("输出高电平，那么整个回路中存在电势差，则有电流流过LED,可以预测LED会被点亮。反之，"),a("code",[t._v("GPIO17")]),t._v("若输出低电平，LED不会被点亮。根据原理图，我们搭建下面的电路:"),a("p"),t._v(" "),a("p",{attrs:{align:"center"}},[a("img",{attrs:{src:"/images/python/use_pi_to_learn_python/led_on_breadboard.png",width:"500"}})]),t._v(" "),a("p",[t._v("硬件电路搭建好了，接下来就该我们的Python上场了。按照前面的讨论我们需要控制"),a("code",[t._v("GPIO17")]),t._v("的输出电平。当然，这不会很难。在树莓派的Python库中有这个一个叫做"),a("code",[t._v("RPi.GPIO")]),t._v("的库可以帮我们完成这项操作。为了演示的方便，我们直接在树莓派终端输入"),a("code",[t._v("python")]),t._v("，进入Python的交互模式，然后依次输入下面的命令:")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" RPi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" GPIO\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" GPIO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setmode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BCM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" GPIO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OUT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" GPIO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("哈哈，你注意到什么了吗? 看看你的效果是不是和我一样呢?\n")]),a("p",{attrs:{align:"center"}},[a("img",{attrs:{src:"/images/python/use_pi_to_learn_python/led_on_real.png",width:"500"}})]),t._v("\n不出所料，LED灯被点亮了。在上面的语句中:"),a("p"),t._v(" "),a("ul",[a("li",[a("code",[t._v("import RPi.GPIO as GPIO")]),t._v("： 导入"),a("code",[t._v("RPi.GPIO")]),t._v("库，并简称为"),a("code",[t._v("GPIO")]),t._v(",这是很常规的一种操作，有一些Python库的名字很长，我们使用简称来方便我们编写程序。")]),t._v(" "),a("li",[a("code",[t._v("IO.setmode(GPIO.BCM)")]),t._v("：我们指定使用Broadcom的引脚编号方式。")]),t._v(" "),a("li",[a("code",[t._v("GPIO.setup(17, GPIO.OUT)")]),t._v("：用来指定"),a("code",[t._v("GPIO17")]),t._v("是作为输出引脚使用。")]),t._v(" "),a("li",[a("code",[t._v("GPIO.output(17, True)")]),t._v("：使得"),a("code",[t._v("GPIO17")]),t._v("输出高电平，点亮LED")])]),t._v(" "),a("p",[t._v("在这里，你可以继续输入"),a("code",[t._v("GPIO.output(17, False)")]),t._v(",看看LED是否和你预期的一样。\n在结束本小节退出程序之前，依次在Python交互模式下输入:")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" GPIO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cleanup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("在这里:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("GPIO.cleanup()")]),t._v("是为了在退出程序之前使得树莓派的引脚回到默认的状态，以此保证不对树莓派产生影响。好了，在这一小节你顺利地使用Python点亮了一颗LED,为你自己喝彩吧! 毕竟这是一个很好的开始，不是吗?")])]),t._v(" "),a("p",[t._v("在这一节，你可以了解到:")]),t._v(" "),a("ul",[a("li",[a("em",[t._v("如何使用Python控制树莓派的引脚输出")])])]),t._v(" "),a("Livere")],1)}),[],!1,null,null,null);s.default=e.exports}}]);